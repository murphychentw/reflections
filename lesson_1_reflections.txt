How did viewing a diff between two versions of a file help you see the bug that was introduced?

Viewing a diff between two versions of a file shows only differences between two files, thus it's easier to see the bug that was introduced.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Because having easy access to the entire history of a file makes identifying design changes and bugs more efficient.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: can have meaningful version for each commit.
Cons: the timing depends on judgement call. may forget to commit for a long time.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Saving multiple files in one commit: sees all the files comprising a project.
Treat each file separately: see each file as a complete unit for serving its purpose.

How can you use the commands git log and git diff to view the history of files?

Use git log to see the commit message for each commit.
Use git diff to see the differences between two commits.

How might using version control make you more confident to make changes that could break something?

Because I can go back to previous versions to find out in which version the bug was introduced.

Now that you have your workspace set up, what do you want to try using Git for?

Start developing applications.
