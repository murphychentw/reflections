What happens when you initialize a repository? Why do you need to do it?

When I initialize a repository, git creates metadata for files under the current working directory.

Need to initialize a repository in order to track file change histories.

How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area is different from the working directory in that you can't change the contents of the file directly.
Staging area is different from the repository in that the files have not been tracked yet.

It makes commiting a logical unit acrossing multiple files easier.

How can you use the staging area to make sure you have one commit per logical change?

Choose logical changes from working directory and add them to staging area.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When we need to make some experimental changes or big changes while not breaking production version.

Can develop on branches without affecting master branch.

How do the diagrams help you visualize the branch structure?

Can see the parent of each commit which comprises the branch structure.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is a commit which combines both the changes in the two branches.

Represent in this way because each commit records the difference between itself and its parent commit.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Pros: save time.

Cons: sometimes may not pay attention to what have been changed by other developers and may lead to unexpected behavior.

